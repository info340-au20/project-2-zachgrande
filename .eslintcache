<<<<<<< HEAD
[{"/Users/zachgrande/Code/info340-finalproject/project-2-zachgrande/src/index.js":"1","/Users/zachgrande/Code/info340-finalproject/project-2-zachgrande/src/Track.js":"2","/Users/zachgrande/Code/info340-finalproject/project-2-zachgrande/src/Form.js":"3","/Users/zachgrande/Code/info340-finalproject/project-2-zachgrande/src/App.js":"4","/Users/zachgrande/Code/info340-finalproject/project-2-zachgrande/src/JournalLog.js":"5","/Users/zachgrande/Code/info340-finalproject/project-2-zachgrande/src/Entry.js":"6","/Users/zachgrande/Code/info340-finalproject/project-2-zachgrande/src/AboutEntry.js":"7","/Users/zachgrande/Code/info340-finalproject/project-2-zachgrande/src/history.js":"8","/Users/zachgrande/Code/info340-finalproject/project-2-zachgrande/src/NavigationBar.js":"9","/Users/zachgrande/Code/info340-finalproject/project-2-zachgrande/src/AboutUs.js":"10","/Users/zachgrande/Code/info340-finalproject/project-2-zachgrande/src/MoodSelect.js":"11"},{"size":1649,"mtime":1608184618363,"results":"12","hashOfConfig":"13"},{"size":561,"mtime":1608184853731,"results":"14","hashOfConfig":"13"},{"size":6850,"mtime":1608184457587,"results":"15","hashOfConfig":"13"},{"size":6960,"mtime":1608184828812,"results":"16","hashOfConfig":"13"},{"size":335,"mtime":1608176745713,"results":"17","hashOfConfig":"13"},{"size":1110,"mtime":1608184468044,"results":"18","hashOfConfig":"13"},{"size":758,"mtime":1608181535917,"results":"19","hashOfConfig":"13"},{"size":87,"mtime":1607575723998,"results":"20","hashOfConfig":"13"},{"size":481,"mtime":1607976851395,"results":"21","hashOfConfig":"13"},{"size":1137,"mtime":1608184491621,"results":"22","hashOfConfig":"13"},{"size":1372,"mtime":1608184685271,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"13ftmlp",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zachgrande/Code/info340-finalproject/project-2-zachgrande/src/index.js",["48"],"/Users/zachgrande/Code/info340-finalproject/project-2-zachgrande/src/Track.js",[],"/Users/zachgrande/Code/info340-finalproject/project-2-zachgrande/src/Form.js",["49","50"],"import fetchTrack from './Track.js';\nimport { useState } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nfunction Form(prop) {\n  // Establish our variables from the prop\n  const user = prop.currentUser;\n  let entries = prop.entries;\n  let formValid = prop.formValid;\n\n  let entryObj = {\n    inputTitle: \"\",\n    inputDate: \"\",\n    inputDescription: \"\",\n    inputSong: \"\",\n  }\n  let entryFormArray = [\n    {input: entryObj.inputTitle, err: \"\",id:\"inputTitle\", name: \"title\", type: \"text\", label: \"Post Title\", aria: \"Entry Title\", placeholder: \"What do you want to title this post?\"},\n    {input: entryObj.inputDate,  err: \"\", id:\"inputDate\", name: \"date\", type: \"date\", label: \"Day\", aria: \"Date\"},\n    {input: entryObj.inputDescription, err: \"\", id:\"inputDescription\", name: \"description\", type: \"text\", label: \"How was your day?\", aria: \"Day Description\", placeholder: \"mm/dd/yyyy\"},\n    {input: entryObj.inputSong, err: \"\", id:\"inputSong\", name: \"song\",type: \"text\", label: \"Search for Today's Song\", aria: \"Song Search\", placeholder: \"Search\"},\n  ]\n \n  // Base appearance of form without error checks  \n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [isInvalid, setIsInvalid] = useState(\"\");\n  let errorMessage = \"\";\n\n\n  function MakeForm() {\n    let handleInput = (event) => {\n      const inputValue = event.target.value;\n      const inputName = event.target.id;\n\n      entryObj[inputName] = inputValue;\n        if(!isSubmitted){\n          event.target.classList = \"form-control form-control-lg\";\n          errorMessage = \"\";\n        } \n        if(inputValue !== \"\" && isSubmitted){\n          event.target.classList = \"form-control form-control-lg is-valid\";\n          errorMessage = \"\";\n        } \n        if (inputValue === \"\" && isSubmitted){\n          event.target.classList = \"form-control form-control-lg is-invalid\";\n          errorMessage = \"Please provide a \" + inputName.replace(\"input\", \"\").toLowerCase() + \".\";\n        }\n\n      entryFormArray = [\n        {input: entryObj.inputTitle, id:\"inputTitle\", name: \"title\", type: \"text\", label: \"Post Title\", aria: \"Entry Title\", placeholder: \"What do you want to title this post?\"},\n        {input: entryObj.inputDate,  id:\"inputDate\", name: \"date\", type: \"date\", label: \"Day\", aria: \"Date\"},\n        {input: entryObj.inputDescription, id:\"inputDescription\", name: \"description\", type: \"text\", label: \"How was your day?\", aria: \"Day Description\", placeholder: \"mm/dd/yyyy\"},\n        {input: entryObj.inputSong, id:\"inputSong\", name: \"song\",type: \"text\", label: \"Search for Today's Song\", aria: \"Song Search\", placeholder: \"Search\"},\n      ]\n    }\n    \n    let allForm = entryFormArray.map((obj) => {\n      let textBox = <div></div>;\n      if (obj.id === \"inputDescription\"){\n        if(!isSubmitted) {\n        textBox = (\n          <textarea className=\"form-control form-control-lg\" id={obj.id} rows=\"3\" aria-label={obj.aria} onChange={handleInput}></textarea>\n        )\n        }\n        if(isSubmitted && isInvalid){\n          textBox = (\n          <div>\n            <textarea className=\"form-control form-control-lg is-invalid\" id={obj.id} rows=\"3\" aria-label={obj.aria} onChange={handleInput}></textarea>\n            <div class=\"invalid-feedback\">Please provide a {obj.name}.</div>\n          </div>\n          )\n        } \n        if(isSubmitted && !isInvalid){\n          textBox = (\n            <textarea className=\"form-control form-control-lg is-valid\" id={obj.id} rows=\"3\" aria-label={obj.aria} onChange={handleInput}></textarea>\n          )      \n        }\n      } else {\n        if(!isSubmitted) {\n          textBox = (\n            <input type={obj.type} className=\"form-control form-control-lg\" id={obj.id} aria-label={obj.aria} placeholder={obj.placeholder} onChange={handleInput} />\n          ) \n        }\n        if(isSubmitted && isInvalid){\n          textBox = (\n            <div>\n              <input type={obj.type} className=\"form-control form-control-lg is-invalid\" id={obj.id} aria-label={obj.aria} placeholder={obj.placeholder} onChange={handleInput} />\n              <div class=\"invalid-feedback\">Please provide a {obj.name}.</div>\n            </div>\n          )\n        } \n        if(isSubmitted && !isInvalid){\n          textBox = (\n            <input type={obj.type} className=\"form-control form-control-lg is-valid\" id={obj.id} aria-label={obj.aria} placeholder={obj.placeholder} onChange={handleInput} />\n          )      \n        }\n      }\n      return (\n        <div className=\"form-group\" key={obj}>\n            <label htmlFor={obj.id}>{obj.label}</label>\n            {textBox}\n        </div>\n      )\n    })\n\n    return (\n      <div>\n       {allForm} \n      </div>\n    )\n  }\n  \n  let isDisabled = '';\n  let error = false;\n\n  // When a user submits the form, modify the state\n  let handleSubmit = (event) => {\n    event.preventDefault();\n    setIsSubmitted(true);\n\n    // Error handling\n    entryFormArray.map((obj) => {\n      if(obj.input === '') {\n        formValid(false);\n        setIsInvalid(true);\n      } else {\n        formValid(true);\n        setIsInvalid(false);\n      }\n    })\n\n    let newEntriesArray = [];\n\n    // Pre-process our existing entries for the new state\n    if (entries !== []) {\n      newEntriesArray = entries.map((entry) => {\n        return entry;\n      })\n    }\n\n    // Add the final entry to the state and keep the program moving\n    const finalizeUserInput = (searchResults) => {\n      // Extract the fetch data, top result\n      searchResults = searchResults.results[0];\n\n      // Select the song elements to go in the entry\n      let songEntry = [searchResults.artworkUrl100, searchResults.artistName, searchResults.trackName];\n\n      const newEntry = {\n        postTitle: entryObj.inputTitle,\n        date: entryObj.inputDate,\n        dayDescription: entryObj.inputDescription,\n        moodRating: prop.mood,\n        artwork: songEntry[0],\n        artist: songEntry[1],\n        songTitle: songEntry[2],\n        time: firebase.database.ServerValue.TIMESTAMP,\n        user: user.uid\n      }\n\n      // Append an additional entry to the local state\n      newEntriesArray.push(newEntry);\n\n      // ADD A NEW ENTRY TO THE DATABASE\n      // Get a reference to the database child\n      const entryRef = firebase.database().ref('entries');\n      entryRef.push(newEntry);\n    }\n\n    // The final step of our form, ensure nothing is computed until fetch completes\n    fetchTrack(entryObj.inputSong, finalizeUserInput);\n\n  }\n\n  return (\n    <section id=\"landingPage\">\n      <form>\n        <MakeForm />\n        <button className={\"btn btn-primary \" + isDisabled} id=\"submit\" onClick={handleSubmit} aria-disabled={error}>Done</button>\n        <div className=\"song-loading-spinner disabled\"></div>\n        <div className=\"errors\"></div>\n      </form>\n    </section>\n  )\n}\n\nexport default Form;\n","/Users/zachgrande/Code/info340-finalproject/project-2-zachgrande/src/App.js",["51","52"],"import React, { useState, useEffect } from 'react';\nimport { Route, Switch, Link, Redirect, NavLink } from 'react-router-dom';\nimport NavigationBar from './NavigationBar.js';\nimport AboutPage from './AboutUs.js';\nimport Form from './Form.js';\nimport JournalLog from './JournalLog.js';\nimport MoodSelect from './MoodSelect.js';\nimport AboutEntry from './AboutEntry.js';\nimport { Spinner } from 'reactstrap';\nimport firebase from 'firebase/app';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport { Helmet } from 'react-helmet';\n\n\nconst uiConfig = {\n  signInOptions: [\n    {\n      provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      requireDisplayName: true\n    }\n  ],\n  credentialHelper: 'none',\n  signInFlow: 'popup',\n  callbacks: {\n    // Avoid redirects after sign-in.\n    signInSuccessWithAuthResult: () => false,\n  }\n};\n\nfunction App() {\n  // This is the state of the app, where user journal entries are maintained\n  // An entry has several components:\n  // - a title\n  // - a date\n  // - a description\n  // - a mood rating\n  // - a song (artwork, artist name, song title)\n  // - a time stamp\n  // - a user ID (who posted it)\n  const [entries, modifyEntries] = useState([]);\n  const [user, setUser] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const authUnregisterFunction = firebase.auth().onAuthStateChanged((firebaseUser) => {\n      setUser(firebaseUser);\n      setIsLoading(false);\n    })\n\n    return function cleanup() {\n      authUnregisterFunction();\n    }\n  })\n\n  const handleSignOut = () => {\n    firebase.auth().signOut();\n  }\n\n  const handleChange = (e) => {\n    modifyEntries(e);\n  }\n\n  useEffect(() => {\n    const entryRef = firebase.database().ref('entries');\n    entryRef.on('value', (snapshot) => {\n      const entriesObj = snapshot.val(); // convert to Javascript value\n      // If our entries array is empty, then we can't iterate over empty keys\n      // This conditional will ensure we skip the following if there are no entries\n      if (entriesObj === null) {\n        modifyEntries([]);\n        return null;\n      }\n      let objectKeys = Object.keys(entriesObj);\n      let entriesArray = objectKeys.map((key) => {\n        let singleEntryObj = entriesObj[key];\n        singleEntryObj.key = key // IMPORTANT\n        return singleEntryObj;\n      })\n      modifyEntries(entriesArray);\n    })\n  }, [])\n\n  const renderJournalLog = (routerProps) => {\n    const userID = user.uid;\n\n    // The array of journal entries for this session's specific user\n    let thisEntryArray = [];\n    if (entries.length !== 0) {\n      for (let i = 0; i < entries.length; i++) {\n        let currentEntry = entries[i];\n        if (currentEntry.user === userID) {\n          thisEntryArray.push(currentEntry);\n        }\n      }\n    }\n\n    if (thisEntryArray.length === 0) {\n      return (\n        <div>\n          <p>You have not created any journal entries! You can create an entry by visiting\n            <NavLink to=\"create-entry\" className=\"nav-link\" id=\"mainCAE\" activeClassName={\"activeLink\"}>Create an Entry</NavLink>\n          </p>\n        </div>\n      )\n    } else {\n      return <JournalLog {...routerProps} logs={thisEntryArray} currentUser={user} />\n    }\n  }\n\n  // Pass mood from MoodSelect\n  const [moodEntry, setMoodEntry] = useState();\n  const handleMoodInput = (e) => {\n    setMoodEntry(e);\n  }  \n  const renderMoodSelect = (routerProps) => {\n    function MoodErrorCheck() {\n      if(moodEntry === undefined){\n        return (<button type=\"button\" className=\"btn btn-lg btn-secondary\" disabled><Link to=\"/form\" onClick={e => e.preventDefault()}>Continue</Link></button>)\n      } else {\n        return (<button type=\"button\" className=\"btn btn-lg btn-secondary\"><Link to=\"/form\">Continue</Link></button>)\n      }\n    }\n    return (\n      <div className=\"form-group\">\n        <p role=\"label\">Please select a mood for the entry color scheme:</p>\n        <MoodSelect {...routerProps} moodEntry={handleMoodInput}/>\n        <div id=\"moodFeedback\" className=\"invalid-feedback\"></div>\n        <MoodErrorCheck />\n      </div>\n    )\n  }\n  \n  const [formValid, setFormValidity] = useState();\n  const handleFormValidation = (e) => {\n    setFormValidity(e);\n  }\n  const renderForm = (routerProps) => {\n    function FormErrorCheck() {\n      if(formValid === false){\n        return (<button type=\"button\" className=\"btn btn-lg btn-secondary\" disabled><Link to=\"/\" onClick={e => e.preventDefault()}>Home</Link></button>)\n      } else {\n        return (<button type=\"button\" className=\"btn btn-lg btn-secondary\"><Link to=\"/\">Home</Link></button>)\n      }\n    }\n    return (\n      <div>\n        <Form {...routerProps} entries={entries} currentUser={user} completionAction={sendUserHome} mood={moodEntry} formValid={handleFormValidation}/>\n        <FormErrorCheck /> \n      </div>\n    )\n  }\n\n  const renderAboutEntry = routerProps => {\n    return (\n      <AboutEntry {...routerProps} entries={entries} />\n    )\n  }\n\n\n  const sendUserHome = () => {\n    return <Redirect to=\"/\" />\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"text-center\">\n        <Spinner color=\"primary\">\n        </Spinner>\n        <p>Loading...</p>\n      </div>\n    )\n  }\n\n  let content = null;\n  if (!user) {\n    content = (\n      <div className=\"container\">\n        <h1>Sign Up</h1>\n        <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n      </div>\n    )\n  } else {\n    content = (\n      <div>\n        <header className=\"page-header\">\n          <h1><Link to=\"/\" id='title'>SongNotes</Link></h1>\n\n          {user &&\n            <button className=\"btn btn-secondary signOutBtn\" onClick={handleSignOut}>\n              Log Out {user.displayName}\n            </button>\n          }\n\n          <NavigationBar />\n        </header>\n\n        <main>\n          <nav className=\"container-fluid\">\n            <Switch>\n              <Route exact path=\"/\" render={renderJournalLog} />\n              <Route path=\"/create-entry\" render={renderMoodSelect} />\n              <Route path=\"/form\" render={renderForm} />\n              <Route path=\"/about-us\" component={AboutPage} />\n              <Route path=\"/post/:entryKey\" render={renderAboutEntry} />\n              <Redirect to=\"/\" />\n            </Switch>\n          </nav>\n        </main>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>SongNotes</title>\n        <meta name=\"author\" content=\"INFO 340 AA\" />\n        <meta name=\"description\" content=\"A Journaling App with Music\" />\n      </Helmet>\n\n      {content}\n\n      <footer>\n        <div className=\"footer-copyright text-center py-2\"> &copy; INFO 340 AA -\n          <NavLink exact to=\"/about-us\" className=\"nav-link-1\" activeClassName={\"activeLink\"} id='footerAU'> About Us</NavLink>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/zachgrande/Code/info340-finalproject/project-2-zachgrande/src/JournalLog.js",[],"/Users/zachgrande/Code/info340-finalproject/project-2-zachgrande/src/Entry.js",[],"/Users/zachgrande/Code/info340-finalproject/project-2-zachgrande/src/AboutEntry.js",[],"/Users/zachgrande/Code/info340-finalproject/project-2-zachgrande/src/history.js",[],"/Users/zachgrande/Code/info340-finalproject/project-2-zachgrande/src/NavigationBar.js",[],"/Users/zachgrande/Code/info340-finalproject/project-2-zachgrande/src/AboutUs.js",[],"/Users/zachgrande/Code/info340-finalproject/project-2-zachgrande/src/MoodSelect.js",[],{"ruleId":"53","severity":1,"message":"54","line":17,"column":1,"nodeType":"55","messageId":"56","endLine":17,"endColumn":96},{"ruleId":"57","severity":1,"message":"58","line":47,"column":11,"nodeType":"59","messageId":"60","endLine":47,"endColumn":23},{"ruleId":"61","severity":1,"message":"62","line":123,"column":30,"nodeType":"63","messageId":"64","endLine":123,"endColumn":32},{"ruleId":"57","severity":1,"message":"65","line":61,"column":9,"nodeType":"59","messageId":"60","endLine":61,"endColumn":21},{"ruleId":"66","severity":1,"message":"67","line":127,"column":12,"nodeType":"68","endLine":127,"endColumn":24},"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-unused-vars","'errorMessage' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'handleChange' is assigned a value but never used.","jsx-a11y/aria-role","Elements with ARIA roles must use a valid, non-abstract ARIA role.","JSXAttribute"]
=======
[{"/Users/Gideon/Desktop/INFO 340/project-2-zachgrande/src/history.js":"1","/Users/Gideon/Desktop/INFO 340/project-2-zachgrande/src/NavigationBar.js":"2","/Users/Gideon/Desktop/INFO 340/project-2-zachgrande/src/MoodSelect.js":"3","/Users/Gideon/Desktop/INFO 340/project-2-zachgrande/src/JournalLog.js":"4","/Users/Gideon/Desktop/INFO 340/project-2-zachgrande/src/Entry.js":"5","/Users/Gideon/Desktop/INFO 340/project-2-zachgrande/src/AboutEntry.js":"6"},{"size":87,"mtime":1608185113541,"results":"7","hashOfConfig":"8"},{"size":481,"mtime":1608185113540,"results":"9","hashOfConfig":"8"},{"size":1372,"mtime":1608185113540,"results":"10","hashOfConfig":"8"},{"size":335,"mtime":1608185113540,"results":"11","hashOfConfig":"8"},{"size":1110,"mtime":1608185113539,"results":"12","hashOfConfig":"8"},{"size":1404,"mtime":1608189224489,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pq5cd6",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Gideon/Desktop/INFO 340/project-2-zachgrande/src/history.js",[],"/Users/Gideon/Desktop/INFO 340/project-2-zachgrande/src/NavigationBar.js",[],"/Users/Gideon/Desktop/INFO 340/project-2-zachgrande/src/MoodSelect.js",[],"/Users/Gideon/Desktop/INFO 340/project-2-zachgrande/src/JournalLog.js",[],"/Users/Gideon/Desktop/INFO 340/project-2-zachgrande/src/Entry.js",[],"/Users/Gideon/Desktop/INFO 340/project-2-zachgrande/src/AboutEntry.js",[]]
>>>>>>> 38c7c188cd5156b5dcf1d3fa0e16f80b598ac1fa
